{"version":3,"file":"0eccf4c7519446ab3438.chunk.js","mappings":"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","sources":["webpack://superset/./node_modules/@deck.gl/layers/dist/esm/polygon-layer/polygon-layer.js","webpack://superset/./plugins/legacy-preset-chart-deckgl/node_modules/d3-scale/node_modules/d3-array/src/ascending.js","webpack://superset/./plugins/legacy-preset-chart-deckgl/node_modules/d3-scale/node_modules/d3-array/src/bisector.js","webpack://superset/./plugins/legacy-preset-chart-deckgl/node_modules/d3-scale/node_modules/d3-array/src/bisect.js","webpack://superset/./plugins/legacy-preset-chart-deckgl/node_modules/d3-scale/node_modules/d3-array/src/number.js","webpack://superset/./plugins/legacy-preset-chart-deckgl/node_modules/d3-scale/src/init.js","webpack://superset/./plugins/legacy-preset-chart-deckgl/node_modules/d3-scale/src/threshold.js","webpack://superset/./plugins/legacy-preset-chart-deckgl/src/utils.js","webpack://superset/./plugins/legacy-preset-chart-deckgl/src/utils/getPointsFromPolygon.ts","webpack://superset/./plugins/legacy-preset-chart-deckgl/src/layers/Polygon/Polygon.jsx"],"sourcesContent":["import { CompositeLayer, createIterable, log } from '@deck.gl/core';\nimport SolidPolygonLayer from '../solid-polygon-layer/solid-polygon-layer';\nimport PathLayer from '../path-layer/path-layer';\nimport * as Polygon from '../solid-polygon-layer/polygon';\nimport { replaceInRange } from '../utils';\nconst defaultLineColor = [0, 0, 0, 255];\nconst defaultFillColor = [0, 0, 0, 255];\nconst defaultProps = {\n  stroked: true,\n  filled: true,\n  extruded: false,\n  elevationScale: 1,\n  wireframe: false,\n  _normalize: true,\n  _windingOrder: 'CW',\n  lineWidthUnits: 'meters',\n  lineWidthScale: 1,\n  lineWidthMinPixels: 0,\n  lineWidthMaxPixels: Number.MAX_SAFE_INTEGER,\n  lineJointRounded: false,\n  lineMiterLimit: 4,\n  getPolygon: {\n    type: 'accessor',\n    value: f => f.polygon\n  },\n  getFillColor: {\n    type: 'accessor',\n    value: defaultFillColor\n  },\n  getLineColor: {\n    type: 'accessor',\n    value: defaultLineColor\n  },\n  getLineWidth: {\n    type: 'accessor',\n    value: 1\n  },\n  getElevation: {\n    type: 'accessor',\n    value: 1000\n  },\n  material: true\n};\nexport default class PolygonLayer extends CompositeLayer {\n  initializeState() {\n    this.state = {\n      paths: []\n    };\n\n    if (this.props.getLineDashArray) {\n      log.removed('getLineDashArray', 'PathStyleExtension')();\n    }\n  }\n\n  updateState({\n    oldProps,\n    props,\n    changeFlags\n  }) {\n    const geometryChanged = changeFlags.dataChanged || changeFlags.updateTriggersChanged && (changeFlags.updateTriggersChanged.all || changeFlags.updateTriggersChanged.getPolygon);\n\n    if (geometryChanged && Array.isArray(changeFlags.dataChanged)) {\n      const paths = this.state.paths.slice();\n      const pathsDiff = changeFlags.dataChanged.map(dataRange => replaceInRange({\n        data: paths,\n        getIndex: p => p.__source.index,\n        dataRange,\n        replace: this._getPaths(dataRange)\n      }));\n      this.setState({\n        paths,\n        pathsDiff\n      });\n    } else if (geometryChanged) {\n      this.setState({\n        paths: this._getPaths(),\n        pathsDiff: null\n      });\n    }\n  }\n\n  _getPaths(dataRange = {}) {\n    const {\n      data,\n      getPolygon,\n      positionFormat,\n      _normalize\n    } = this.props;\n    const paths = [];\n    const positionSize = positionFormat === 'XY' ? 2 : 3;\n    const {\n      startRow,\n      endRow\n    } = dataRange;\n    const {\n      iterable,\n      objectInfo\n    } = createIterable(data, startRow, endRow);\n\n    for (const object of iterable) {\n      objectInfo.index++;\n      let polygon = getPolygon(object, objectInfo);\n\n      if (_normalize) {\n        polygon = Polygon.normalize(polygon, positionSize);\n      }\n\n      const {\n        holeIndices\n      } = polygon;\n      const positions = polygon.positions || polygon;\n\n      if (holeIndices) {\n        for (let i = 0; i <= holeIndices.length; i++) {\n          const path = positions.slice(holeIndices[i - 1] || 0, holeIndices[i] || positions.length);\n          paths.push(this.getSubLayerRow({\n            path\n          }, object, objectInfo.index));\n        }\n      } else {\n        paths.push(this.getSubLayerRow({\n          path: positions\n        }, object, objectInfo.index));\n      }\n    }\n\n    return paths;\n  }\n\n  renderLayers() {\n    const {\n      data,\n      _dataDiff,\n      stroked,\n      filled,\n      extruded,\n      wireframe,\n      _normalize,\n      _windingOrder,\n      elevationScale,\n      transitions,\n      positionFormat\n    } = this.props;\n    const {\n      lineWidthUnits,\n      lineWidthScale,\n      lineWidthMinPixels,\n      lineWidthMaxPixels,\n      lineJointRounded,\n      lineMiterLimit,\n      lineDashJustified\n    } = this.props;\n    const {\n      getFillColor,\n      getLineColor,\n      getLineWidth,\n      getLineDashArray,\n      getElevation,\n      getPolygon,\n      updateTriggers,\n      material\n    } = this.props;\n    const {\n      paths,\n      pathsDiff\n    } = this.state;\n    const FillLayer = this.getSubLayerClass('fill', SolidPolygonLayer);\n    const StrokeLayer = this.getSubLayerClass('stroke', PathLayer);\n    const polygonLayer = this.shouldRenderSubLayer('fill', paths) && new FillLayer({\n      _dataDiff,\n      extruded,\n      elevationScale,\n      filled,\n      wireframe,\n      _normalize,\n      _windingOrder,\n      getElevation,\n      getFillColor,\n      getLineColor: extruded && wireframe ? getLineColor : defaultLineColor,\n      material,\n      transitions\n    }, this.getSubLayerProps({\n      id: 'fill',\n      updateTriggers: {\n        getPolygon: updateTriggers.getPolygon,\n        getElevation: updateTriggers.getElevation,\n        getFillColor: updateTriggers.getFillColor,\n        lineColors: extruded && wireframe,\n        getLineColor: updateTriggers.getLineColor\n      }\n    }), {\n      data,\n      positionFormat,\n      getPolygon\n    });\n    const polygonLineLayer = !extruded && stroked && this.shouldRenderSubLayer('stroke', paths) && new StrokeLayer({\n      _dataDiff: pathsDiff && (() => pathsDiff),\n      widthUnits: lineWidthUnits,\n      widthScale: lineWidthScale,\n      widthMinPixels: lineWidthMinPixels,\n      widthMaxPixels: lineWidthMaxPixels,\n      jointRounded: lineJointRounded,\n      miterLimit: lineMiterLimit,\n      dashJustified: lineDashJustified,\n      _pathType: 'loop',\n      transitions: transitions && {\n        getWidth: transitions.getLineWidth,\n        getColor: transitions.getLineColor,\n        getPath: transitions.getPolygon\n      },\n      getColor: this.getSubLayerAccessor(getLineColor),\n      getWidth: this.getSubLayerAccessor(getLineWidth),\n      getDashArray: this.getSubLayerAccessor(getLineDashArray)\n    }, this.getSubLayerProps({\n      id: 'stroke',\n      updateTriggers: {\n        getWidth: updateTriggers.getLineWidth,\n        getColor: updateTriggers.getLineColor,\n        getDashArray: updateTriggers.getLineDashArray\n      }\n    }), {\n      data: paths,\n      positionFormat,\n      getPath: x => x.path\n    });\n    return [!extruded && polygonLayer, polygonLineLayer, extruded && polygonLayer];\n  }\n\n}\nPolygonLayer.layerName = 'PolygonLayer';\nPolygonLayer.defaultProps = defaultProps;\n//# sourceMappingURL=polygon-layer.js.map","export default function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import ascending from \"./ascending.js\";\n\nexport default function(f) {\n  let delta = f;\n  let compare = f;\n\n  if (f.length === 1) {\n    delta = (d, x) => f(d) - x;\n    compare = ascendingComparator(f);\n  }\n\n  function left(a, x, lo, hi) {\n    if (lo == null) lo = 0;\n    if (hi == null) hi = a.length;\n    while (lo < hi) {\n      const mid = (lo + hi) >>> 1;\n      if (compare(a[mid], x) < 0) lo = mid + 1;\n      else hi = mid;\n    }\n    return lo;\n  }\n\n  function right(a, x, lo, hi) {\n    if (lo == null) lo = 0;\n    if (hi == null) hi = a.length;\n    while (lo < hi) {\n      const mid = (lo + hi) >>> 1;\n      if (compare(a[mid], x) > 0) hi = mid;\n      else lo = mid + 1;\n    }\n    return lo;\n  }\n\n  function center(a, x, lo, hi) {\n    if (lo == null) lo = 0;\n    if (hi == null) hi = a.length;\n    const i = left(a, x, lo, hi - 1);\n    return i > lo && delta(a[i - 1], x) > -delta(a[i], x) ? i - 1 : i;\n  }\n\n  return {left, center, right};\n}\n\nfunction ascendingComparator(f) {\n  return (d, x) => ascending(f(d), x);\n}\n","import ascending from \"./ascending.js\";\nimport bisector from \"./bisector.js\";\nimport number from \"./number.js\";\n\nconst ascendingBisect = bisector(ascending);\nexport const bisectRight = ascendingBisect.right;\nexport const bisectLeft = ascendingBisect.left;\nexport const bisectCenter = bisector(number).center;\nexport default bisectRight;\n","export default function(x) {\n  return x === null ? NaN : +x;\n}\n\nexport function* numbers(values, valueof) {\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value != null && (value = +value) >= value) {\n        yield value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {\n        yield value;\n      }\n    }\n  }\n}\n","export function initRange(domain, range) {\n  switch (arguments.length) {\n    case 0: break;\n    case 1: this.range(domain); break;\n    default: this.range(range).domain(domain); break;\n  }\n  return this;\n}\n\nexport function initInterpolator(domain, interpolator) {\n  switch (arguments.length) {\n    case 0: break;\n    case 1: {\n      if (typeof domain === \"function\") this.interpolator(domain);\n      else this.range(domain);\n      break;\n    }\n    default: {\n      this.domain(domain);\n      if (typeof interpolator === \"function\") this.interpolator(interpolator);\n      else this.range(interpolator);\n      break;\n    }\n  }\n  return this;\n}\n","import {bisect} from \"d3-array\";\nimport {initRange} from \"./init.js\";\n\nexport default function threshold() {\n  var domain = [0.5],\n      range = [0, 1],\n      unknown,\n      n = 1;\n\n  function scale(x) {\n    return x != null && x <= x ? range[bisect(domain, x, 0, n)] : unknown;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = Array.from(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = Array.from(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return threshold()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return initRange.apply(scale, arguments);\n}\n","/* eslint-disable no-negated-condition */\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { extent } from 'd3-array';\nimport { scaleThreshold } from 'd3-scale';\nimport {\n  getSequentialSchemeRegistry,\n  SequentialScheme,\n} from '@superset-ui/core';\nimport { hexToRGB } from './utils/colors';\n\nconst DEFAULT_NUM_BUCKETS = 10;\n\nexport function getBreakPoints(\n  { break_points: formDataBreakPoints, num_buckets: formDataNumBuckets },\n  features,\n  accessor,\n) {\n  if (!features) {\n    return [];\n  }\n  if (formDataBreakPoints === undefined || formDataBreakPoints.length === 0) {\n    // compute evenly distributed break points based on number of buckets\n    const numBuckets = formDataNumBuckets\n      ? parseInt(formDataNumBuckets, 10)\n      : DEFAULT_NUM_BUCKETS;\n    const [minValue, maxValue] = extent(features, accessor);\n    if (minValue === undefined) {\n      return [];\n    }\n    const delta = (maxValue - minValue) / numBuckets;\n    const precision =\n      delta === 0 ? 0 : Math.max(0, Math.ceil(Math.log10(1 / delta)));\n    const extraBucket = maxValue > maxValue.toFixed(precision) ? 1 : 0;\n    const startValue =\n      minValue < minValue.toFixed(precision) ? minValue - 1 : minValue;\n\n    return new Array(numBuckets + 1 + extraBucket)\n      .fill()\n      .map((_, i) => (startValue + i * delta).toFixed(precision));\n  }\n\n  return formDataBreakPoints.sort((a, b) => parseFloat(a) - parseFloat(b));\n}\n\nexport function getBreakPointColorScaler(\n  {\n    break_points: formDataBreakPoints,\n    num_buckets: formDataNumBuckets,\n    linear_color_scheme: linearColorScheme,\n    opacity,\n  },\n  features,\n  accessor,\n) {\n  const breakPoints =\n    formDataBreakPoints || formDataNumBuckets\n      ? getBreakPoints(\n          {\n            break_points: formDataBreakPoints,\n            num_buckets: formDataNumBuckets,\n          },\n          features,\n          accessor,\n        )\n      : null;\n  const colorScheme = Array.isArray(linearColorScheme)\n    ? new SequentialScheme({\n        colors: linearColorScheme,\n        id: 'custom',\n      })\n    : getSequentialSchemeRegistry().get(linearColorScheme);\n\n  let scaler;\n  let maskPoint;\n  if (breakPoints !== null) {\n    // bucket colors into discrete colors\n    const n = breakPoints.length - 1;\n    const bucketedColors =\n      n > 1\n        ? colorScheme.getColors(n)\n        : [colorScheme.colors[colorScheme.colors.length - 1]];\n\n    // repeat ends\n    const first = bucketedColors[0];\n    const last = bucketedColors[bucketedColors.length - 1];\n    bucketedColors.unshift(first);\n    bucketedColors.push(last);\n\n    const points = breakPoints.map(p => parseFloat(p));\n    scaler = scaleThreshold().domain(points).range(bucketedColors);\n    maskPoint = value => value > breakPoints[n] || value < breakPoints[0];\n  } else {\n    // interpolate colors linearly\n    scaler = colorScheme.createLinearScale(extent(features, accessor));\n    maskPoint = () => false;\n  }\n\n  return d => {\n    const v = accessor(d);\n    const c = hexToRGB(scaler(v));\n    if (maskPoint(v)) {\n      c[3] = 0;\n    } else {\n      c[3] = (opacity / 100) * 255;\n    }\n\n    return c;\n  };\n}\n\nexport function getBuckets(fd, features, accessor) {\n  const breakPoints = getBreakPoints(fd, features, accessor);\n  const colorScaler = getBreakPointColorScaler(fd, features, accessor);\n  const buckets = {};\n  breakPoints.slice(1).forEach((value, i) => {\n    const range = `${breakPoints[i]} - ${breakPoints[i + 1]}`;\n    const mid =\n      0.5 * (parseFloat(breakPoints[i]) + parseFloat(breakPoints[i + 1]));\n    // fix polygon doesn't show\n    const metricLabel = fd.metric ? fd.metric.label || fd.metric : null;\n    buckets[range] = {\n      color: colorScaler({ [metricLabel || fd.metric]: mid }),\n      enabled: true,\n    };\n  });\n\n  return buckets;\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { Point } from '../types';\n\n/** Format originally used by the Polygon plugin */\ntype CustomPolygonFeature = {\n  polygon: Point[];\n};\n\n/**\n * Format that is geojson standard\n * https://geojson.org/geojson-spec.html\n */\ntype GeojsonPolygonFeature = {\n  polygon: {\n    type: 'Feature';\n    geometry: {\n      type: 'Polygon';\n      coordinates: Point[][];\n    };\n  };\n};\n\nexport default function getPointsFromPolygon(\n  feature: CustomPolygonFeature | GeojsonPolygonFeature,\n) {\n  return 'geometry' in feature.polygon\n    ? feature.polygon.geometry.coordinates[0]\n    : feature.polygon;\n}\n","/* eslint-disable react/sort-prop-types */\n/* eslint-disable react/jsx-handler-names */\n/* eslint-disable react/no-access-state-in-setstate */\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint no-underscore-dangle: [\"error\", { \"allow\": [\"\", \"__timestamp\"] }] */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { PolygonLayer } from 'deck.gl';\n\nimport AnimatableDeckGLContainer from '../../AnimatableDeckGLContainer';\nimport Legend from '../../components/Legend';\nimport TooltipRow from '../../TooltipRow';\nimport { getBuckets, getBreakPointColorScaler } from '../../utils';\n\nimport { commonLayerProps } from '../common';\nimport { getPlaySliderParams } from '../../utils/time';\nimport sandboxedEval from '../../utils/sandbox';\n// eslint-disable-next-line import/extensions\nimport getPointsFromPolygon from '../../utils/getPointsFromPolygon';\n// eslint-disable-next-line import/extensions\nimport fitViewport from '../../utils/fitViewport';\n\nconst DOUBLE_CLICK_TRESHOLD = 250; // milliseconds\n\nfunction getElevation(d, colorScaler) {\n  /* in deck.gl 5.3.4 (used in Superset as of 2018-10-24), if a polygon has\n   * opacity zero it will make everything behind it have opacity zero,\n   * effectively showing the map layer no matter what other polygons are\n   * behind it.\n   */\n  return colorScaler(d)[3] === 0 ? 0 : d.elevation;\n}\n\nfunction setTooltipContent(formData) {\n  return o => {\n    const metricLabel = formData.metric.label || formData.metric;\n\n    return (\n      <div className=\"deckgl-tooltip\">\n        {o.object.name && (\n          <TooltipRow label=\"name: \" value={`${o.object.name}`} />\n        )}\n        {o.object[formData.line_column] && (\n          <TooltipRow\n            label={`${formData.line_column}: `}\n            value={`${o.object[formData.line_column]}`}\n          />\n        )}\n        {formData.metric && (\n          <TooltipRow\n            label={`${metricLabel}: `}\n            value={`${o.object[metricLabel]}`}\n          />\n        )}\n      </div>\n    );\n  };\n}\n\nexport function getLayer(\n  formData,\n  payload,\n  onAddFilter,\n  setTooltip,\n  selected,\n  onSelect,\n  filters,\n) {\n  const fd = formData;\n  const fc = fd.fill_color_picker;\n  const sc = fd.stroke_color_picker;\n  let data = [...payload.data.features];\n\n  if (filters != null) {\n    filters.forEach(f => {\n      data = data.filter(x => f(x));\n    });\n  }\n\n  if (fd.js_data_mutator) {\n    // Applying user defined data mutator if defined\n    const jsFnMutator = sandboxedEval(fd.js_data_mutator);\n    data = jsFnMutator(data);\n  }\n\n  const metricLabel = fd.metric ? fd.metric.label || fd.metric : null;\n  const accessor = d => d[metricLabel];\n  // base color for the polygons\n  const baseColorScaler =\n    fd.metric === null\n      ? () => [fc.r, fc.g, fc.b, 255 * fc.a]\n      : getBreakPointColorScaler(fd, data, accessor);\n\n  // when polygons are selected, reduce the opacity of non-selected polygons\n  const colorScaler = d => {\n    const baseColor = baseColorScaler(d);\n    if (selected.length > 0 && !selected.includes(d[fd.line_column])) {\n      baseColor[3] /= 2;\n    }\n\n    return baseColor;\n  };\n\n  const tooltipContentGenerator =\n    fd.line_column &&\n    fd.metric &&\n    ['json', 'geohash', 'zipcode'].includes(fd.line_type)\n      ? setTooltipContent(fd)\n      : undefined;\n\n  return new PolygonLayer({\n    id: `path-layer-${fd.slice_id}`,\n    data,\n    pickable: true,\n    filled: fd.filled,\n    stroked: fd.stroked,\n    getPolygon: getPointsFromPolygon,\n    getFillColor: colorScaler,\n    getLineColor: [sc.r, sc.g, sc.b, 255 * sc.a],\n    getLineWidth: fd.line_width,\n    extruded: fd.extruded,\n    getElevation: d => getElevation(d, colorScaler),\n    elevationScale: fd.multiplier,\n    fp64: true,\n    ...commonLayerProps(fd, setTooltip, tooltipContentGenerator, onSelect),\n  });\n}\n\nconst propTypes = {\n  formData: PropTypes.object.isRequired,\n  payload: PropTypes.object.isRequired,\n  setControlValue: PropTypes.func.isRequired,\n  viewport: PropTypes.object.isRequired,\n  onAddFilter: PropTypes.func,\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n};\n\nconst defaultProps = {\n  onAddFilter() {},\n};\n\nclass DeckGLPolygon extends React.Component {\n  containerRef = React.createRef();\n\n  constructor(props) {\n    super(props);\n\n    this.state = DeckGLPolygon.getDerivedStateFromProps(props);\n\n    this.getLayers = this.getLayers.bind(this);\n    this.onSelect = this.onSelect.bind(this);\n    this.onValuesChange = this.onValuesChange.bind(this);\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    const { width, height, formData, payload } = props;\n\n    // the state is computed only from the payload; if it hasn't changed, do\n    // not recompute state since this would reset selections and/or the play\n    // slider position due to changes in form controls\n    if (state && payload.form_data === state.formData) {\n      return null;\n    }\n\n    const features = payload.data.features || [];\n    const timestamps = features.map(f => f.__timestamp);\n\n    // the granularity has to be read from the payload form_data, not the\n    // props formData which comes from the instantaneous controls state\n    const granularity =\n      payload.form_data.time_grain_sqla ||\n      payload.form_data.granularity ||\n      'P1D';\n\n    const { start, end, getStep, values, disabled } = getPlaySliderParams(\n      timestamps,\n      granularity,\n    );\n\n    let { viewport } = props;\n    if (formData.autozoom) {\n      viewport = fitViewport(viewport, {\n        width,\n        height,\n        points: features.flatMap(getPointsFromPolygon),\n      });\n    }\n\n    return {\n      start,\n      end,\n      getStep,\n      values,\n      disabled,\n      viewport,\n      selected: [],\n      lastClick: 0,\n      formData: payload.form_data,\n    };\n  }\n\n  onSelect(polygon) {\n    const { formData, onAddFilter } = this.props;\n\n    const now = new Date();\n    const doubleClick = now - this.state.lastClick <= DOUBLE_CLICK_TRESHOLD;\n\n    // toggle selected polygons\n    const selected = [...this.state.selected];\n    if (doubleClick) {\n      selected.splice(0, selected.length, polygon);\n    } else if (formData.toggle_polygons) {\n      const i = selected.indexOf(polygon);\n      if (i === -1) {\n        selected.push(polygon);\n      } else {\n        selected.splice(i, 1);\n      }\n    } else {\n      selected.splice(0, 1, polygon);\n    }\n\n    this.setState({ selected, lastClick: now });\n    if (formData.table_filter) {\n      onAddFilter(formData.line_column, selected, false, true);\n    }\n  }\n\n  onValuesChange(values) {\n    this.setState({\n      values: Array.isArray(values)\n        ? values\n        : [values, values + this.state.getStep(values)],\n    });\n  }\n\n  getLayers(values) {\n    if (this.props.payload.data.features === undefined) {\n      return [];\n    }\n\n    const filters = [];\n\n    // time filter\n    if (values[0] === values[1] || values[1] === this.end) {\n      filters.push(\n        d => d.__timestamp >= values[0] && d.__timestamp <= values[1],\n      );\n    } else {\n      filters.push(\n        d => d.__timestamp >= values[0] && d.__timestamp < values[1],\n      );\n    }\n\n    const layer = getLayer(\n      this.props.formData,\n      this.props.payload,\n      this.props.onAddFilter,\n      this.setTooltip,\n      this.state.selected,\n      this.onSelect,\n      filters,\n    );\n\n    return [layer];\n  }\n\n  setTooltip = tooltip => {\n    const { current } = this.containerRef;\n    if (current) {\n      current.setTooltip(tooltip);\n    }\n  };\n\n  render() {\n    const { payload, formData, setControlValue } = this.props;\n    const { start, end, getStep, values, disabled, viewport } = this.state;\n\n    const fd = formData;\n    const metricLabel = fd.metric ? fd.metric.label || fd.metric : null;\n    const accessor = d => d[metricLabel];\n\n    const buckets = getBuckets(formData, payload.data.features, accessor);\n\n    return (\n      <div style={{ position: 'relative' }}>\n        <AnimatableDeckGLContainer\n          ref={this.containerRef}\n          aggregation\n          getLayers={this.getLayers}\n          start={start}\n          end={end}\n          getStep={getStep}\n          values={values}\n          disabled={disabled}\n          viewport={viewport}\n          width={this.props.width}\n          height={this.props.height}\n          mapboxApiAccessToken={payload.data.mapboxApiKey}\n          mapStyle={formData.mapbox_style}\n          setControlValue={setControlValue}\n          onValuesChange={this.onValuesChange}\n          onViewportChange={this.onViewportChange}\n        >\n          {formData.metric !== null && (\n            <Legend\n              categories={buckets}\n              position={formData.legend_position}\n              format={formData.legend_format}\n            />\n          )}\n        </AnimatableDeckGLContainer>\n      </div>\n    );\n  }\n}\n\nDeckGLPolygon.propTypes = propTypes;\nDeckGLPolygon.defaultProps = defaultProps;\n\nexport default DeckGLPolygon;\n"],"names":["defaultLineColor","defaultProps","stroked","filled","extruded","elevationScale","wireframe","_normalize","_windingOrder","lineWidthUnits","lineWidthScale","lineWidthMinPixels","lineWidthMaxPixels","Number","MAX_SAFE_INTEGER","lineJointRounded","lineMiterLimit","getPolygon","type","value","f","polygon","getFillColor","getLineColor","getLineWidth","getElevation","material","PolygonLayer","initializeState","this","state","paths","props","getLineDashArray","log","updateState","oldProps","changeFlags","geometryChanged","dataChanged","updateTriggersChanged","all","Array","isArray","slice","pathsDiff","map","dataRange","data","getIndex","p","__source","index","replace","_getPaths","setState","positionFormat","positionSize","startRow","endRow","iterable","objectInfo","object","holeIndices","positions","i","length","path","push","getSubLayerRow","renderLayers","_dataDiff","transitions","lineDashJustified","updateTriggers","FillLayer","getSubLayerClass","StrokeLayer","polygonLayer","shouldRenderSubLayer","getSubLayerProps","id","lineColors","widthUnits","widthScale","widthMinPixels","widthMaxPixels","jointRounded","miterLimit","dashJustified","_pathType","getWidth","getColor","getPath","getSubLayerAccessor","getDashArray","x","layerName","a","b","NaN","delta","compare","left","lo","hi","mid","d","ascending","ascendingComparator","center","right","ascendingBisect","bisector","bisectRight","initRange","domain","range","arguments","threshold","unknown","n","scale","bisect","_","from","Math","min","invertExtent","y","indexOf","copy","apply","getBreakPoints","break_points","formDataBreakPoints","num_buckets","formDataNumBuckets","features","accessor","undefined","numBuckets","parseInt","minValue","maxValue","extent","precision","max","ceil","log10","extraBucket","toFixed","startValue","fill","sort","parseFloat","getBreakPointColorScaler","linear_color_scheme","linearColorScheme","opacity","breakPoints","colorScheme","SequentialScheme","colors","getSequentialSchemeRegistry","get","scaler","maskPoint","bucketedColors","getColors","first","last","unshift","points","scaleThreshold","createLinearScale","v","c","hexToRGB","getPointsFromPolygon","feature","geometry","coordinates","getLayer","formData","payload","onAddFilter","setTooltip","selected","onSelect","filters","fd","fc","fill_color_picker","sc","stroke_color_picker","forEach","filter","js_data_mutator","jsFnMutator","sandboxedEval","metricLabel","metric","label","baseColorScaler","r","g","colorScaler","baseColor","includes","line_column","tooltipContentGenerator","line_type","o","className","name","TooltipRow","setTooltipContent","slice_id","pickable","line_width","elevation","multiplier","fp64","commonLayerProps","propTypes","PropTypes","setControlValue","viewport","width","height","DeckGLPolygon","React","constructor","super","containerRef","tooltip","current","getDerivedStateFromProps","getLayers","bind","onValuesChange","form_data","timestamps","__timestamp","granularity","time_grain_sqla","start","end","getStep","values","disabled","getPlaySliderParams","autozoom","fitViewport","flatMap","lastClick","now","Date","doubleClick","splice","toggle_polygons","table_filter","render","buckets","color","enabled","getBuckets","style","position","AnimatableDeckGLContainer","ref","aggregation","mapboxApiAccessToken","mapboxApiKey","mapStyle","mapbox_style","onViewportChange","Legend","categories","legend_position","format","legend_format"],"sourceRoot":""}